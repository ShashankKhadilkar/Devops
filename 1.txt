What Is Puppet?
Puppet is a Configuration Management tool that is used for deploying, configuring and managing
servers. It performs the following functions:
Defining distinct configurations for each and every host, and continuously checking and confirming
whether the required configuration is in place and is not altered (if altered Puppet will revert back to
the required configuration) on the host.
Dynamic scaling-up and scaling-down of machines.
Providing control over all your configured machines, so a centralized (master-server or repo-based)
change gets propagated to all, automatically.
Puppet uses a Master Slave architecture in which the Master and Slave communicate through a
secure encrypted channel with the help of SSL.
Configuration Management
System Administrators usually perform repetitive tasks such as installing servers, configuring those
servers, etc. They can automate this task, by writing scripts, but it is a very hectic job when you are
working on a large infrastructure.
To solve this problem, Configuration Management was introduced. Configuration Management is the
practice of handling changes systematically so that a system maintains its integrity over time.
Configuration Management (CM) ensures that the current design and build state of the system is
known, good & trusted; and doesn’t rely on the tacit knowledge of the development team. It allows
access to an accurate historical record of system state for project management and audit purposes.
Configuration Management overcame the following challenges:
Figuring out which components to change when requirements change.
Redoing an implementation because the requirements have changed since the last implementation.
Reverting to a previous version of the component if you have replaced with a new but flawed
version.
Replacing the wrong component because you couldn’t accurately determine which component
needed replacing.


Puppet is a tool that helps you manage and automate the configuration of servers.

When you use Puppet, you define the desired state of the systems in your infrastructure that you want to manage. You do this by writing infrastructure code in Puppet's Domain-Specific Language (DSL) — Puppet Code — which you can use with a wide array of devices and operating systems. Puppet code is declarative, which means that you describe the desired state of your systems, not the steps needed to get there. Puppet then automates the process of getting these systems into that state and keeping them there. Puppet does this through Puppet primary server and a Puppet agent. The Puppet primary server is the server that stores the code that defines your desired state. The Puppet agent translates your code into commands and then executes it on the systems you specify, in what is called a Puppet run.
